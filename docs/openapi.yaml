{
  "openapi": "3.1.0",
  "info": {
    "title": "Budgetly API",
    "description": "API для приложения управления финансами.",
    "contact": {
      "name": "Владос Кирьянов",
      "url": "https://t.me/vnightsky",
      "email": "vlad.nightsky@gmail.com"
    },
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://spdx.org/licenses/AGPL-3.0-or-later.html",
      "identifier": "AGPL-3.0-or-later"
    },
    "version": "0.0.1-SNAPSHOT",
    "summary": "Приложения управления личным бюджетом."
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Локальный сервер"
    }
  ],
  "tags": [
    {
      "name": "Управление категориями",
      "description": "Операции по управлению категориями транзакций пользователей."
    },
    {
      "name": "Управление аккаунтами",
      "description": "Операции по управлению аккаунтами пользователя."
    },
    {
      "name": "Импорт транзакций",
      "description": "Операции с импортом транзакций из разных банков."
    },
    {
      "name": "Управление транзакциями",
      "description": "Операции по управлению транзакциями пользователя."
    }
  ],
  "paths": {
    "/api/v1/transactions/{id}": {
      "get": {
        "tags": [
          "Управление транзакциями"
        ],
        "summary": "Информация о транзакции",
        "description": "Запрос на получение информации о транзакции пользователя.",
        "operationId": "getTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Транзакция найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Транзакция не найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Управление транзакциями"
        ],
        "summary": "Обновление транзакции",
        "description": "Запрос на обновление транзакции. В случае успеха вернёт данные по транзакции.",
        "operationId": "updateTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Транзакция успешно обновлена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Управление транзакциями"
        ],
        "summary": "Удаление транзакции",
        "description": "Запрос на удаление транзакции. Транзакция удаляется безвозвратно, восстановить её нельзя.",
        "operationId": "deleteTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Транзакция успешно удалена. Нечего возвращать."
          }
        }
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "tags": [
          "Управление категориями"
        ],
        "summary": "Информация о категории",
        "description": "Запрос на получение информации о категории транзакций.",
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Категория найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Категория не найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Управление категориями"
        ],
        "summary": "Обновление категории",
        "description": "Запрос на обновление категории транзакций. В случае успеха вернёт данные по категории.",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Категория успешно обновлена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Управление категориями"
        ],
        "summary": "Удаление категории",
        "description": "Запрос на удаление категории транзакций. Категория удаляется безвозвратно, восстановить её нельзя.",
        "operationId": "deleteCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Категория успешно удалена. Нечего возвращать."
          }
        }
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "tags": [
          "Управление аккаунтами"
        ],
        "summary": "Информация об аккаунте",
        "description": "Запрос на получение информации об аккаунте пользователя.",
        "operationId": "getAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Аккаунт найден.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Аккаунт не найден.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Управление аккаунтами"
        ],
        "summary": "Обновление аккаунта",
        "description": "Запрос на обновление аккаунта пользователя. В случае успеха вернёт данные по аккаунту.",
        "operationId": "updateAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Аккаунт успешно обновлён.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Управление аккаунтами"
        ],
        "summary": "Удаление аккаунта",
        "description": "Запрос на удаление аккаунта пользователя. Аккаунт удаляется безвозвратно, восстановить его нельзя.",
        "operationId": "deleteAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "$ref": "#/components/parameters/PathId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Аккаунт успешно удалён. Нечего возвращать."
          }
        }
      }
    },
    "/api/v1/transactions": {
      "get": {
        "tags": [
          "Управление транзакциями"
        ],
        "summary": "Список транзакций",
        "description": "Возвращает список транзакций пользователя.",
        "operationId": "getAllTransactions",
        "responses": {
          "200": {
            "description": "Получен список транзакций.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Управление транзакциями"
        ],
        "summary": "Создание транзакции",
        "description": "Запрос на создание транзакции. В случае успеха вернёт данные по транзакции.",
        "operationId": "saveTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Транзакция успешно создана.",
            "headers": {
              "Location": {
                "$ref": "#/components/headers/Location",
                "style": "simple"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/import/csv": {
      "post": {
        "tags": [
          "Импорт транзакций"
        ],
        "summary": "Из файла CSV",
        "description": "Импорт транзакций банка из файла с типом CSV.",
        "operationId": "importCSV",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список успешно импортирован.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TbankImportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": [
          "Управление категориями"
        ],
        "summary": "Список категорий",
        "description": "Возвращает список категорий транзакций пользователей.",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "Получен список категорий транзакций.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Управление категориями"
        ],
        "summary": "Создание категории",
        "description": "Запрос на создание категории транзакций. В случае успеха вернёт данные по категории.",
        "operationId": "saveCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Категория успешно создана.",
            "headers": {
              "Location": {
                "$ref": "#/components/headers/Location",
                "style": "simple"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts": {
      "get": {
        "tags": [
          "Управление аккаунтами"
        ],
        "summary": "Список аккаунтов пользователей",
        "description": "Возвращает список аккаунтов пользователей.",
        "operationId": "getAllAccounts",
        "responses": {
          "200": {
            "description": "Получен список аккаунтов пользователей.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Управление аккаунтами"
        ],
        "summary": "Создание аккаунта",
        "description": "Запрос на создание аккаунта пользователя. В случае успеха вернёт данные по аккаунту.",
        "operationId": "saveAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Аккаунт успешно создан.",
            "headers": {
              "Location": {
                "$ref": "#/components/headers/Location",
                "style": "simple"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TransactionRequest": {
        "type": "object",
        "description": "Запрос на создание или обновление транзакции пользователя.",
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal",
            "description": "Сумма транзакции. Может быть только положительной или нулём.",
            "example": 100.5,
            "title": "Сумма"
          },
          "description": {
            "type": "string",
            "description": "Текстовое описание транзакции, которое помогает идентифицировать цель транзакции.",
            "example": "Покупка продуктов",
            "title": "Описание"
          },
          "type": {
            "type": "string",
            "description": "Тип транзакции: доход (INCOME) или расход (EXPENSE).",
            "enum": [
              "EXPENSE",
              "INCOME"
            ],
            "example": "EXPENSE",
            "title": "Тип транзакции"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор категории трат пользователя, к которой относится транзакция. Например, \"Еда\", \"Транспорт\" и т.д.",
            "example": 1,
            "title": "Идентификатор категории трат"
          },
          "accountId": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор аккаунта пользователя, с которым связана транзакция.",
            "example": 1,
            "title": "Идентификатор аккаунта пользователя"
          }
        },
        "required": [
          "accountId",
          "amount",
          "categoryId",
          "type"
        ],
        "title": "Создать/обновить транзакцию"
      },
      "TransactionResponse": {
        "type": "object",
        "description": "Содержит информацию об транзакции пользователя.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор транзакции пользователя.",
            "example": 1,
            "readOnly": true,
            "title": "Идентификатор транзакции"
          },
          "amount": {
            "type": "number",
            "format": "decimal",
            "description": "Сумма транзакции. Может быть только положительной или нулём.",
            "example": 100.5,
            "title": "Сумма"
          },
          "description": {
            "type": "string",
            "description": "Текстовое описание транзакции, которое помогает идентифицировать цель транзакции.",
            "example": "Покупка продуктов",
            "title": "Описание"
          },
          "type": {
            "type": "string",
            "description": "Тип транзакции: доход (INCOME) или расход (EXPENSE).",
            "enum": [
              "EXPENSE",
              "INCOME"
            ],
            "example": "EXPENSE",
            "title": "Тип транзакции"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "description": "Информация о категории тарт пользователя, к которой относится транзакция. Например, \"Еда\", \"Транспорт\" и т.д.",
            "readOnly": true,
            "title": "Информация о категории тарт пользователя"
          },
          "accountId": {
            "type": "integer",
            "format": "int64",
            "description": "Информация об аккаунте пользователя, к которму относится транзакция.",
            "readOnly": true,
            "title": "Информация об аккаунте пользователя"
          }
        },
        "required": [
          "amount",
          "type"
        ],
        "title": "Информация о транзакции"
      },
      "CategoryRequest": {
        "type": "object",
        "description": "Запрос на создание или обновление категории трат пользователя.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название категории трат нужно для идентификации категории для пользователя.",
            "example": "Продукты",
            "title": "Название категории трат"
          },
          "accountId": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор аккаунта пользователя требуется для того, чтобы связать конкретную категорию трат с конкретным пользователем.",
            "example": 1,
            "title": "Идентификатор аккаунта пользователя"
          }
        },
        "required": [
          "accountId",
          "name"
        ],
        "title": "Создать/обновить категорию"
      },
      "CategoryResponse": {
        "type": "object",
        "description": "Содержит информацию о категории трат пользователя.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор категории трат нужен для идентификации категории.",
            "example": 1,
            "readOnly": true,
            "title": "Идентификатор категории трат"
          },
          "name": {
            "type": "string",
            "description": "Название категории трат нужно для идентификации категории для пользователя.",
            "example": "Продукты",
            "title": "Название категории трат"
          },
          "code": {
            "type": "string",
            "description": "Код категории помогает системе определять категорию при парсинге. Должно быть уникальным.",
            "example": "MARKET",
            "title": "Код категории"
          },
          "accountId": {
            "type": "integer",
            "format": "int64",
            "description": "Информация об аккаунте пользователя.",
            "readOnly": true,
            "title": "Информация об аккаунте пользователя"
          }
        },
        "title": "Информация о категории"
      },
      "AccountRequest": {
        "type": "object",
        "description": "Запрос на создание или обновление пользователя.",
        "properties": {
          "username": {
            "type": "string",
            "description": "Имя пользователя. Используется для авторизации.",
            "example": "catra",
            "title": "Имя пользователя"
          },
          "password": {
            "type": "string",
            "description": "Пароль пользователя. Используется для авторизации.",
            "example": "adora",
            "title": "Пароль пользователя",
            "writeOnly": true
          }
        },
        "required": [
          "password",
          "username"
        ],
        "title": "Создать/обновить аккаунт"
      },
      "AccountResponse": {
        "type": "object",
        "description": "Содержит информацию об аккаунте пользователя.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Указатель на аккаунт пользователя. Генерируется на стороне сервера.",
            "example": 1,
            "readOnly": true,
            "title": "Идентификатор"
          },
          "username": {
            "type": "string",
            "description": "Имя пользователя. Используется для авторизации.",
            "example": "catra",
            "title": "Имя пользователя"
          }
        },
        "title": "Информация об аккаунте"
      },
      "TbankImportResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "skipped": {
            "type": "integer",
            "format": "int32"
          },
          "saved": {
            "type": "integer",
            "format": "int32"
          },
          "parsed": {
            "type": "integer",
            "format": "int32"
          },
          "filtered": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR",
              "STARTED"
            ]
          }
        }
      },
      "ErrorDetailResponse": {
        "type": "object",
        "description": "Представляет детализированную информацию об ошибке. Используется для указания конкретных полей и сообщений об ошибках.",
        "properties": {
          "field": {
            "type": "string",
            "description": "Название поля, связанного с ошибкой (например, \"email\", \"password\").",
            "example": "email",
            "readOnly": true,
            "title": "Название поля"
          },
          "message": {
            "type": "string",
            "description": "Сообщение об ошибке для конкретного поля. Сообщение поможет понять, как правильно вводить данные.",
            "example": "Email must be a valid format",
            "readOnly": true,
            "title": "Сообщение об ошибке"
          }
        },
        "title": "Детализированная информация об ошибке"
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Содержит информацию об ошибке.",
        "properties": {
          "error": {
            "type": "string",
            "description": "Общий тип ошибки (например, \"ValidationError\", \"InternalServerError\", \"NotFound\").",
            "example": "ValidationError",
            "readOnly": true,
            "title": "Тип ошибки"
          },
          "message": {
            "type": "string",
            "description": "Сообщение об ошибке, предназначенное для пользователя или разработчика.",
            "example": "Invalid input data",
            "readOnly": true,
            "title": "Сообщение об ошибке"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP-статус ошибки",
            "example": 400,
            "readOnly": true,
            "title": "Сообщение об ошибке"
          },
          "details": {
            "type": "array",
            "description": "Список содержащий детализированную информацию об ошибке",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailResponse"
            },
            "readOnly": true,
            "title": "Детали ошибки"
          }
        },
        "title": "Информация об ошибке"
      }
    },
    "parameters": {
      "PathId": {
        "name": "ID",
        "in": "path",
        "description": "Уникальный идентификатор ресурса. Например ID аккаунта или транзакции.",
        "required": true,
        "allowEmptyValue": false,
        "schema": {
          "format": "int64"
        },
        "example": 1
      }
    },
    "headers": {
      "Location": {
        "description": "Ссылка на созданный ресурс",
        "schema": {
          "type": "string"
        },
        "example": "http://localhost:8080/api/v1/resource/1"
      }
    }
  }
}